/**
 * Turn a hast tree into a xast tree.
 *
 * @param {HastNodes} tree
 *   hast tree to transform.
 * @param {Options | null | undefined} [options]
 *   Configuration (optional).
 * @returns {XastNodes}
 *   xast tree.
 */
export function toXast(tree: HastNodes, options?: Options | null | undefined): XastNodes;
export type HastComment = import('hast').Comment;
export type HastDoctype = import('hast').Doctype;
export type HastElement = import('hast').Element;
export type HastNodes = import('hast').Nodes;
export type HastRoot = import('hast').Root;
export type HastText = import('hast').Text;
export type Schema = import('property-information').Schema;
export type XastAttributes = import('xast').Attributes;
export type XastComment = import('xast').Comment;
export type XastDoctype = import('xast').Doctype;
export type XastElement = import('xast').Element;
export type XastElementContent = import('xast').ElementContent;
export type XastNodes = import('xast').Nodes;
export type XastRoot = import('xast').Root;
export type XastRootContent = import('xast').RootContent;
export type XastText = import('xast').Text;
/**
 * Configuration.
 */
export type Options = {
    /**
     * Which space the document is in (default: `'html'`).
     *
     * When an `<svg>` element is found in the HTML space, this package already
     * automatically switches to and from the SVG space when entering and exiting
     * it.
     *
     * You can also switch explicitly with `xmlns` properties in hast, but note
     * that only HTML and SVG are supported.
     */
    space?: Space | null | undefined;
};
/**
 * Namespace.
 */
export type Space = 'html' | 'svg';
/**
 * Info passed around about the current state.
 */
export type State = {
    /**
     *   Namespace.
     */
    ns: string | undefined;
    /**
     *   Current schema.
     */
    schema: Schema;
};
