/*
 * Copyright 2019 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
import { TYPE_CELL } from '@adobe/mdast-util-gridtables';
import all from '../all.js';

const V_ALIGN = {
  top: '',
  center: 'middle',
  bottom: 'bottom',
};

const H_ALIGN = {
  left: '',
  right: 'right',
  center: 'center',
  distribute: 'justify',
  justify: 'justify',
  both: 'justify',
};

function gridTableCell(h, node) {
  const props = {};
  if (node.children.length > 0) {
    props.align = H_ALIGN[node.children[0].alignment];
  }
  props.valign = V_ALIGN[node.verticalAlignment];

  if (node.rowSpan > 1) {
    props.rowSpan = node.rowSpan;
  }
  if (node.colSpan > 1) {
    props.colSpan = node.colSpan;
  }
  h.listContainers.unshift([]);
  const c = h(TYPE_CELL, props, all(h, node));
  h.listContainers.shift();
  return c;
}

export default function cell(h, node) {
  if (h.gridtables) {
    return gridTableCell(h, node);
  }
  // remember alignment for table
  const props = {};
  if (node.children.length > 0) {
    props.align = node.children[0].alignment;
  }
  if (node.rowSpan > 1) {
    props.rowSpan = node.rowSpan;
  }
  if (node.colSpan > 1) {
    props.colSpan = node.colSpan;
  }
  h.listContainers.unshift([]);
  const c = h('tableCell', props, all(h, node));
  h.listContainers.shift();
  return c;
}
