/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

/* eslint-disable no-param-reassign */
import docxReader from '@adobe/mammoth/lib/docx/docx-reader.js';
import docxStyleMap from '@adobe/mammoth/lib/docx/style-map.js';
import { readOptions } from '@adobe/mammoth/lib/options-reader.js';
import { openArrayBuffer } from './zipfile.js';

/**
 * Uses mammoth to parse the docx and returns the document AST.
 * @param {Buffer} input - the docx as buffer.
 * @param {object} options - mammoth parser options
 * @returns {Promise<object>} - document AST
 */
export default async function docx2dast(input, options = {}) {
  options = readOptions(options);
  const result = await openArrayBuffer(input)
    .tap((docxFile) => docxStyleMap.readStyleMap(docxFile).then((styleMap) => {
      options.embeddedStyleMap = styleMap;
    }))
    .then((docxFile) => docxReader.read(docxFile, input)
      .then((documentResult) => documentResult.map(options.transformDocument)));
  return result.value;
}
